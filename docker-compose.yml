version: "3"
services:
  kafkajs-nodejs:
    build:
      context: .
      dockerfile: dev.Dockerfile
    environment:
      PORT: 80
      # NODE_ENV: production # to test production builds enable this.
      MONGO_DB_URL: mongodb://kafkajs-nodejs-mongodb:27017/kafkajs-nodejs
    ports:
      - 8099:80
    volumes:
      - kafkajs-nodejs-node-modules-volume:/app/node_modules
      - ./src:/app/src
    deploy:
      replicas: 1
    depends_on:
      - kafkajs-nodejs-mongodb
      - kafka

  kafkajs-nodejs-mongodb:
    image: mongo:latest
    environment:
      MONGO_DATA_DIR: /data/db
      MONGO_LOG_DIR: /dev/null
    volumes:
      - kafkajs-nodejs-mongodb-volume:/data/kafkajs-nodejs-mongodb/db
    ports:
      - 21017:27017
    command:
      - mongod

  zoo-keeper:
    image: zookeeper:3.4.9
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: zoo-keeper:2181
    volumes:
      - zoo-keeper-data-volume:/data
      - zoo-keeper-datalog-volume:/datalog    

  kafka:
    image: wurstmeister/kafka:2.13-2.7.0
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: "zoo-keeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
      KAFKA_LOG_CLEANUP_POLICY: compact
      KAFKA_LOG_DIRS: "/kafka/kafka-logs"
    volumes:
      - kafka-data-volume:/kafka
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zoo-keeper    

volumes:
  kafkajs-nodejs-node-modules-volume:
  kafkajs-nodejs-mongodb-volume:
  zoo-keeper-data-volume:
  zoo-keeper-datalog-volume:
  kafka-data-volume:
